<?php 

/**
 * @file 
 * Provides a simple field formatter images from IIIF Image Servers (currently supports Image API 2.0 only, with plans to support previous versions)
 *
 *
 *  @author shaune
 */

/**
 * Implements hook_field_formatter_info().
 */
function iiif_image_field_formatter_info() {
  return array(
    'iiif_image_formatter' => array( //Machine name of the formatter
      'label' => t('IIIF Image ID'),
      'field types' => array('text'), //This will only be available to text fields
      'settings'  => array( //Array of the settings we'll create
        'rotation' => '0', //give a default value for when the form is first loaded
        'quality' => 'default', //give a default value for when the form is first loaded
        'zoom' => 1, //give a default value for when the form is first loaded
        'tooltip' => 'Zoom in on Image', //ditto
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function iiif_image_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  //This gets the view_mode where our settings are stored
  $display = $instance['display'][$view_mode];
  //This gets the actual settings
  $settings = $display['settings'];
  //Initialize the element variable
  $element = array();
  //Add our settings
  $element['rotation'] = array(
    '#type' => 'textfield',
    '#size' => '5',
    '#title' => t('Rotation'),
    '#description' => t('The rotation of the image in degrees.  You may enter a number from 0 to 360.  A background will be visible behind images where degrees are not multiples of 90. '),
    '#default_value'  => $settings['rotation'],
  );

  $element['quality'] = array(
    '#type'           => 'select',
    '#options'        => array(
        'default' => t('default'),
        'color' => t('color'),
        'gray' => t('gray'),
        'bitonal' => t('bitonal')
    ),
    '#title'          => t('Quality'),
    '#description'    => t('The quality parameter determines the mode of the image - color, greyscale, or black and white.'),
    '#default_value'  => $settings['quality'],
  );

  $element['zoom'] = array(
    '#type' => 'checkbox',
    '#return_value' => 1, 
    '#title' => t('Zoom'),
    '#description' => t('Allow deep-zoom for this image via OpenSeadragon'),
    '#default_value'  => $settings['zoom'],
  );

  $element['tooltip'] = array(
    '#type'           => 'textfield',                        // Use a textbox
    '#title'          => t('Tool Tip'),                      // Widget label
    '#description'    => t('This text will appear when a user mouses over.'),  // helper text
    '#default_value'  => $settings['tooltip'],               // Get the value if it's already been set
  );
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function iiif_image_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = t('Use a @zoom IIIF Image with the tooltip of "@tooltip"', array(
    '@zoom'     => $settings['zoom'],
    '@tooltip'  => $settings['tooltip'],
  )); // we use t() for translation and placeholders to guard against attacks
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function iiif_image_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array(); // Initialize the var
  $settings = $display['settings']; // get the settings
  $rotation = $settings['rotation'];
  $quality = $settings['quality'];
  $zoom = $settings['zoom']; // The Zoom setting selected in the settings form
  $tooltip = $settings['tooltip']; // The tool tip assigned in settings
  // Create the image - Note that I'm storing the images in our module but they could be anywhere
  // $image = '<img src="/' . drupal_get_path('module', 'facebooklink') . 'fb-' . $size . '.png">';
  
  $url_temp = 'http://libimages.princeton.edu/loris/';
  $zoom_class = "";
  if($zoom) { $zoom_class = "zoom";}
  
  $template_start = '<img class="thumbnail '.$zoom .'" src="';
  $template_end = '/full/300,/'.$rotation.'/'.$quality.'.jpg">';
  //$template_end = '/'.$region_x.','.$region_y.','.$region_w.','.$region_h.'/'.$size_w.','.$size_h.'/'.$rotation.'/'.$quality.'.'.$format.'"><';

  $image = $template_start . $url_temp . $url . $template_end;

  foreach ($items as $delta => $item) {
    $iiif = $item['safe_value']; // Getting the actual value
  }
  $options = array(
    'html'        => TRUE, // This tells Drupal that we're sending HTML, not plain text, otherwise it would encode it
    'attributes'  => array(
      'title' => $tooltip, // This sets our tooltip
      ),
    );
  if(isset($iiif)) {
    $link = l($image, $iiif, $options); // Create the Link
    $element[0]['#markup'] = $link; // Assign it to the #markup of the element
  }
  return $element;
}


